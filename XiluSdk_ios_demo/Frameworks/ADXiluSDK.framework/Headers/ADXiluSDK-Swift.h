#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef ADXILUSDK_SWIFT_H
#define ADXILUSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import BeiZiSDK;
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import MSAdSDK;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ADXiluSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC9ADXiluSDK9ADAdaptor")
@interface ADAdaptor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC9ADXiluSDK16ADDeviceInfoTool")
@interface ADDeviceInfoTool : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocationManager;
@class CLLocation;
@interface ADDeviceInfoTool (SWIFT_EXTENSION(ADXiluSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
@end

@class NSString;
enum ADXiluAdPlatform : NSInteger;
/// 广告信息基类
SWIFT_CLASS("_TtC9ADXiluSDK12ADXiluAdInfo")
@interface ADXiluAdInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull adId;
@property (nonatomic) NSInteger eCmp;
@property (nonatomic) NSInteger rewardAmount;
@property (nonatomic, copy) NSString * _Nonnull rewardName;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull extraData;
@property (nonatomic) enum ADXiluAdPlatform platform;
@property (nonatomic) BOOL isReady;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform isReady:(BOOL)isReady OBJC_DESIGNATED_INITIALIZER;
/// 释放广告资源
- (void)p_release;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// 广告平台类型
typedef SWIFT_ENUM(NSInteger, ADXiluAdPlatform, open) {
  ADXiluAdPlatformBeizi = 1,
  ADXiluAdPlatformMs = 2,
  ADXiluAdPlatformAll = 3,
};

/// 广告尺寸
SWIFT_CLASS("_TtC9ADXiluSDK12ADXiluAdSize")
@interface ADXiluAdSize : NSObject
@property (nonatomic, readonly) CGFloat width;
@property (nonatomic, readonly) CGFloat height;
- (nonnull instancetype)initWithWidth:(CGFloat)width height:(CGFloat)height OBJC_DESIGNATED_INITIALIZER;
/// 获取屏幕宽度
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ADXiluAdSize * _Nonnull screenWidth;)
+ (ADXiluAdSize * _Nonnull)screenWidth SWIFT_WARN_UNUSED_RESULT;
/// 获取屏幕尺寸
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ADXiluAdSize * _Nonnull screenSize;)
+ (ADXiluAdSize * _Nonnull)screenSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@protocol ADXiluBaseAdDelegate;
SWIFT_CLASS("_TtC9ADXiluSDK12ADXiluBaseAd")
@interface ADXiluBaseAd : NSObject
/// 请求数量
@property (nonatomic) NSInteger count;
/// 广告位ID
@property (nonatomic, copy) NSString * _Nonnull adPosId;
/// 广告尺寸
@property (nonatomic, readonly, strong) ADXiluAdSize * _Nonnull adSize;
/// 跳过按钮
@property (nonatomic, strong) UIButton * _Nullable skipButton;
/// 倒计时时长（秒）
@property (nonatomic) NSTimeInterval countdownDuration;
/// 仅支持的平台
@property (nonatomic) enum ADXiluAdPlatform onlySupportPlatform;
@property (nonatomic, readonly) CGSize screenSize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ADXiluAdSize * _Nonnull defaultAdSize;)
+ (ADXiluAdSize * _Nonnull)defaultAdSize SWIFT_WARN_UNUSED_RESULT;
/// 代理
@property (nonatomic, weak) id <ADXiluBaseAdDelegate> _Nullable delegate;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 展示广告
- (void)showAdIn:(id _Nonnull)containerView;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIView;
@class UIViewController;
/// Banner广告类
SWIFT_CLASS("_TtC9ADXiluSDK14ADXiluBannerAd")
@interface ADXiluBannerAd : ADXiluBaseAd
/// 广告容器视图
@property (nonatomic, weak) UIView * _Nullable containerView;
@property (nonatomic, strong) UIViewController * _Nullable nativeViewController;
@property (nonatomic) BOOL showCloseBtn;
/// 自动刷新间隔（秒）
@property (nonatomic) int32_t autoRefreshInterval;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
- (void)dismissAd;
@end

@interface ADXiluBannerAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiBannerViewDelegate>
@end

@class MSBannerView;
@interface ADXiluBannerAd (SWIFT_EXTENSION(ADXiluSDK)) <MSBannerViewDelegate>
- (void)msBannerAdReadySuccess:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerAdRenderSuccess:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerError:(MSBannerView * _Null_unspecified)msBannerAd error:(NSError * _Null_unspecified)error;
- (void)msBannerAdRenderFail:(MSBannerView * _Null_unspecified)msBannerAd error:(NSError * _Null_unspecified)error;
- (void)msBannerShow:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerClicked:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerDetailShow:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerDetailClosed:(MSBannerView * _Null_unspecified)msBannerAd;
- (void)msBannerClosed:(MSBannerView * _Null_unspecified)msBannerAd;
@end

@class ADXiluError;
SWIFT_PROTOCOL("_TtP9ADXiluSDK20ADXiluBaseAdDelegate_")
@protocol ADXiluBaseAdDelegate
@optional
/// 广告接收成功
- (void)xilu_AdDidReceive:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdDidReceiveMuti:(ADXiluBaseAd * _Nonnull)xiluAd adInfos:(NSArray<ADXiluAdInfo *> * _Nonnull)adInfos;
/// 广告曝光
- (void)xilu_AdDidExpose:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告点击
- (void)xilu_AdDidClick:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告关闭
- (void)xilu_AdDidClose:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告跳过
- (void)xilu_AdDidSkip:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告加载失败
- (void)xilu_AdDidFail:(ADXiluBaseAd * _Nonnull)xiluAd error:(ADXiluError * _Nonnull)error;
/// 倒计时回调
- (void)xilu_AdTick:(ADXiluBaseAd * _Nonnull)xiluAd remainingTime:(NSTimeInterval)remainingTime;
@end

@interface ADXiluBaseAd (SWIFT_EXTENSION(ADXiluSDK)) <ADXiluBaseAdDelegate>
- (void)xilu_AdDidClick:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdDidReceive:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdDidExpose:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdDidClose:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdDidFail:(ADXiluBaseAd * _Nonnull)xiluAd error:(ADXiluError * _Nonnull)error;
- (void)xilu_AdDidSkip:(ADXiluBaseAd * _Nonnull)xiluAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
- (void)xilu_AdTick:(ADXiluBaseAd * _Nonnull)xiluAd remainingTime:(NSTimeInterval)remainingTime;
@end

@protocol ADXiluDrawVodAdDelegate;
@class ADXiluDrawVodAdInfo;
/// Draw视频信息流广告类
SWIFT_CLASS("_TtC9ADXiluSDK15ADXiluDrawVodAd")
@interface ADXiluDrawVodAd : NSObject
/// 广告位ID
@property (nonatomic, readonly, copy) NSString * _Nonnull adPosId;
/// 广告尺寸
@property (nonatomic, readonly, strong) ADXiluAdSize * _Nonnull adSize;
/// 请求数量
@property (nonatomic, readonly) NSInteger count;
/// 仅支持的平台
@property (nonatomic) enum ADXiluAdPlatform onlySupportPlatform;
/// 代理
@property (nonatomic, weak) id <ADXiluDrawVodAdDelegate> _Nullable delegate;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize count:(NSInteger)count OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 获取当前广告信息列表
- (NSArray<ADXiluDrawVodAdInfo *> * _Nonnull)getCurrentAdInfoList SWIFT_WARN_UNUSED_RESULT;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Draw视频信息流广告监听器
SWIFT_PROTOCOL("_TtP9ADXiluSDK23ADXiluDrawVodAdDelegate_")
@protocol ADXiluDrawVodAdDelegate
@optional
/// 广告接收成功
- (void)drawVodAdDidReceive:(ADXiluDrawVodAd * _Nonnull)drawVodAd adInfoList:(NSArray<ADXiluDrawVodAdInfo *> * _Nonnull)adInfoList;
/// 广告曝光
- (void)drawVodAdDidExpose:(ADXiluDrawVodAd * _Nonnull)drawVodAd adInfo:(ADXiluDrawVodAdInfo * _Nonnull)adInfo;
/// 广告点击
- (void)drawVodAdDidClick:(ADXiluDrawVodAd * _Nonnull)drawVodAd adInfo:(ADXiluDrawVodAdInfo * _Nonnull)adInfo;
/// 广告关闭
- (void)drawVodAdDidClose:(ADXiluDrawVodAd * _Nonnull)drawVodAd adInfo:(ADXiluDrawVodAdInfo * _Nonnull)adInfo;
/// 广告渲染失败
- (void)drawVodAdRenderFailed:(ADXiluDrawVodAd * _Nonnull)drawVodAd adInfo:(ADXiluDrawVodAdInfo * _Nonnull)adInfo error:(ADXiluError * _Nonnull)error;
/// 广告加载失败
- (void)drawVodAdDidFail:(ADXiluDrawVodAd * _Nonnull)drawVodAd error:(ADXiluError * _Nonnull)error;
@end

/// Draw视频信息流广告信息
SWIFT_CLASS("_TtC9ADXiluSDK19ADXiluDrawVodAdInfo")
@interface ADXiluDrawVodAdInfo : ADXiluAdInfo
/// 广告标题
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// 广告描述
@property (nonatomic, readonly, copy) NSString * _Nonnull desc;
/// 广告图片URL
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrl;
/// 广告视频URL
@property (nonatomic, readonly, copy) NSString * _Nullable videoUrl;
/// 广告尺寸
@property (nonatomic, readonly, strong) ADXiluAdSize * _Nonnull adSize;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform title:(NSString * _Nonnull)title desc:(NSString * _Nonnull)desc imageUrl:(NSString * _Nullable)imageUrl videoUrl:(NSString * _Nullable)videoUrl adSize:(ADXiluAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
/// 获取广告视图
- (UIView * _Nonnull)getAdView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform isReady:(BOOL)isReady SWIFT_UNAVAILABLE;
@end

/// 广告错误信息
SWIFT_CLASS("_TtC9ADXiluSDK11ADXiluError")
@interface ADXiluError : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nonnull message;
- (nonnull instancetype)initWithCode:(NSInteger)code message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol ADXiluFullScreenVodAdDelegate;
/// 全屏视频广告类
SWIFT_CLASS("_TtC9ADXiluSDK21ADXiluFullScreenVodAd")
@interface ADXiluFullScreenVodAd : ADXiluBaseAd
/// 是否静音播放
@property (nonatomic) BOOL isMuted;
/// 场景ID
@property (nonatomic, copy) NSString * _Nullable sceneId;
/// 代理
@property (nonatomic, weak) id <ADXiluFullScreenVodAdDelegate> _Nullable extraDelegate;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 展示广告
- (void)showAdFrom:(UIViewController * _Nonnull)viewController;
/// 关闭广告
- (void)closeAd;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize SWIFT_UNAVAILABLE;
@end

/// 全屏视频广告监听器
SWIFT_PROTOCOL("_TtP9ADXiluSDK29ADXiluFullScreenVodAdDelegate_")
@protocol ADXiluFullScreenVodAdDelegate
@optional
/// 广告接收成功
- (void)fullScreenVodAdDidReceive:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 视频缓存完成
- (void)fullScreenVodAdVideoDidCache:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 视频播放完成
- (void)fullScreenVodAdVideoDidComplete:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 视频播放错误
- (void)fullScreenVodAdVideoDidError:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo error:(ADXiluError * _Nonnull)error;
/// 广告曝光
- (void)fullScreenVodAdDidExpose:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告点击
- (void)fullScreenVodAdDidClick:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告关闭
- (void)fullScreenVodAdDidClose:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告加载失败
- (void)fullScreenVodAdDidFail:(ADXiluFullScreenVodAd * _Nonnull)fullScreenVodAd error:(ADXiluError * _Nonnull)error;
@end

/// 插屏广告类
SWIFT_CLASS("_TtC9ADXiluSDK20ADXiluInterstitialAd")
@interface ADXiluInterstitialAd : ADXiluBaseAd
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize rootVC:(UIViewController * _Nullable)rootVC OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 展示广告
- (void)showAdFrom:(UIViewController * _Nonnull)viewController;
/// 关闭广告
- (void)closeAd;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize SWIFT_UNAVAILABLE;
@end

@class BeiZiInterstitial;
@class BeiZiRequestError;
@interface ADXiluInterstitialAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiInterstitialDelegate>
- (void)BeiZi_interstitialDidClick:(BeiZiInterstitial * _Nonnull)beiziInterstitial;
- (void)BeiZi_interstitialDidReceiveAd:(BeiZiInterstitial * _Nonnull)beiziInterstitial;
- (void)BeiZi_interstitialDidDismissScreen:(BeiZiInterstitial * _Nonnull)beiziInterstitial;
- (void)BeiZi_interstitialDidPresentScreen:(BeiZiInterstitial * _Nonnull)beiziInterstitial;
- (void)BeiZi_interstitial:(BeiZiInterstitial * _Nonnull)beiziInterstitial didFailToLoadAdWithError:(BeiZiRequestError * _Nonnull)error;
@end

@class MSInterstitialAd;
@interface ADXiluInterstitialAd (SWIFT_EXTENSION(ADXiluSDK)) <MSInterstitialExtensionFunctionDelegate>
- (void)msInterstitialLoaded:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
- (void)msInterstitialShow:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
- (void)msInterstitialError:(MSInterstitialAd * _Null_unspecified)msInterstitialAd error:(NSError * _Null_unspecified)error;
- (void)msInterstitialAdShowFail:(MSInterstitialAd * _Null_unspecified)msInterstitialAd error:(NSError * _Null_unspecified)error;
- (void)msInterstitialAdReadySuccess:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
- (void)msInterstitialPlatformError:(MSPlatform)platform ad:(MSInterstitialAd * _Null_unspecified)msInterstitialAd error:(NSError * _Null_unspecified)error;
@end

@interface ADXiluInterstitialAd (SWIFT_EXTENSION(ADXiluSDK)) <MSInterstitialDelegate>
- (void)msInterstitialClosed:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
- (void)msInterstitialClicked:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
- (void)msInterstitialDetailClosed:(MSInterstitialAd * _Null_unspecified)msInterstitialAd;
@end

/// 信息流广告类
SWIFT_CLASS("_TtC9ADXiluSDK14ADXiluNativeAd")
@interface ADXiluNativeAd : ADXiluBaseAd
@property (nonatomic) BOOL isTemplate;
/// 请求数量
@property (nonatomic, strong) UIView * _Nullable containerView;
@property (nonatomic, strong) UIViewController * _Nullable nativeViewController;
/// 是否静音播放
@property (nonatomic) BOOL isMuted;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize count:(NSInteger)count OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize SWIFT_UNAVAILABLE;
@end

@class MSNativeFeedAd;
@interface ADXiluNativeAd (SWIFT_EXTENSION(ADXiluSDK)) <MSNativeFeedAdExtensionFunctionDelegate>
- (void)msNativeFeedAdPlatformError:(MSPlatform)platform nativeFeedAd:(MSNativeFeedAd * _Nonnull)nativeFeedAd error:(NSError * _Nonnull)error;
@end

@class BeiZiNativeExpress;
@interface ADXiluNativeAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiNativeExpressDelegate>
- (void)BeiZi_nativeExpressDidLoad:(BeiZiNativeExpress * _Nonnull)beiziNativeExpress;
- (void)BeiZi_nativeExpressDidShow:(BeiZiNativeExpress * _Nonnull)beiziNativeExpress;
- (void)BeiZi_nativeExpressDidClick:(BeiZiNativeExpress * _Nonnull)beiziNativeExpress;
- (void)BeiZi_nativeExpressDislikeDidClick:(BeiZiNativeExpress * _Nonnull)beiziNativeExpress;
- (void)BeiZi_nativeExpress:(BeiZiNativeExpress * _Nonnull)beiziNativeExpress didFailToLoadAdWithError:(BeiZiRequestError * _Nonnull)error;
@end

@class BeiZiUnifiedCustom;
@interface ADXiluNativeAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiUnifiedCustomDelegate>
- (void)BeiZi_unifiedDidClick:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom;
- (void)BeiZi_unifiedDidLoadSuccess:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom;
- (void)BeiZi_unifiedDidDismissScreen:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom;
- (void)BeiZi_unifiedDidPresentScreen:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom;
- (void)BeiZi_unifiedDidCloseDetailView:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom;
- (void)BeiZi_unified:(BeiZiUnifiedCustom * _Nonnull)unifiedCustom didFailToLoadAdWithError:(BeiZiRequestError * _Nonnull)error;
@end

@class MSNativeFeedAdModel;
@interface ADXiluNativeAd (SWIFT_EXTENSION(ADXiluSDK)) <MSNativeFeedAdDelegate>
- (void)msNativeFeedAdShow:(MSNativeFeedAdModel * _Nonnull)feedAd;
- (void)msNativeFeedAdClick:(MSNativeFeedAdModel * _Nonnull)feedAd;
- (void)msNativeFeedAdClosed:(MSNativeFeedAdModel * _Nonnull)feedAd;
- (void)msNativeFeedAdDetailShow;
- (void)msNativeFeedAdDetailClosed;
- (void)msNativeFeedAdLoaded:(MSNativeFeedAd * _Nonnull)nativeFeedAd feedAds:(NSArray<MSNativeFeedAdModel *> * _Nonnull)feedAds;
- (void)msNativeFeedAdError:(MSNativeFeedAd * _Nonnull)nativeFeedAd withError:(NSError * _Nonnull)error;
- (void)msNativeFeedAdShowFailed:(MSNativeFeedAdModel * _Nonnull)feedAd error:(NSError * _Nonnull)error;
- (void)msNativeFeedAdVideoStateDidChanged:(MSPlayerPlayState)playerState feedAd:(MSNativeFeedAdModel * _Nonnull)feedAd;
- (void)msNativeFeedAdMaterialMetaReadySuccess:(MSNativeFeedAd * _Nonnull)nativeFeedAd feedAd:(MSNativeFeedAdModel * _Nonnull)feedAd;
- (void)msNativeFeedAdMaterialMetaReadyError:(MSNativeFeedAd * _Nonnull)nativeFeedAd feedAd:(MSNativeFeedAdModel * _Nonnull)feedAd error:(NSError * _Nonnull)error;
@end

enum ADXiluNativeAdType : NSInteger;
/// 信息流广告信息
SWIFT_CLASS("_TtC9ADXiluSDK18ADXiluNativeAdInfo")
@interface ADXiluNativeAdInfo : ADXiluAdInfo
/// 广告标题
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// 广告描述
@property (nonatomic, readonly, copy) NSString * _Nonnull desc;
@property (nonatomic, readonly, copy) NSString * _Nonnull actionText;
/// 广告图标URL
@property (nonatomic, readonly, copy) NSString * _Nullable iconUrl;
/// 广告图片URL
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrl;
/// 广告视频URL
@property (nonatomic, readonly, copy) NSString * _Nullable videoUrl;
/// 广告类型
@property (nonatomic, readonly) enum ADXiluNativeAdType adType;
/// 是否静音播放
@property (nonatomic, readonly) BOOL isMuted;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform title:(NSString * _Nonnull)title desc:(NSString * _Nonnull)desc actionText:(NSString * _Nonnull)actionText iconUrl:(NSString * _Nullable)iconUrl imageUrl:(NSString * _Nullable)imageUrl videoUrl:(NSString * _Nullable)videoUrl adType:(enum ADXiluNativeAdType)adType isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
/// 是否为模板广告
@property (nonatomic, readonly) BOOL isExpress;
/// 获取模板广告视图
- (UIView * _Nullable)getExpressAdViewIn:(UIView * _Nonnull)containerView SWIFT_WARN_UNUSED_RESULT;
/// 渲染模板广告
- (void)renderIn:(UIView * _Nonnull)containerView;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform isReady:(BOOL)isReady SWIFT_UNAVAILABLE;
@end

/// 信息流广告类型
typedef SWIFT_ENUM(NSInteger, ADXiluNativeAdType, open) {
  ADXiluNativeAdTypeExpress = 0,
  ADXiluNativeAdTypeSelfRender = 1,
};

@protocol ADXiluRewardVodAdDelegate;
/// 激励视频广告类
SWIFT_CLASS("_TtC9ADXiluSDK17ADXiluRewardVodAd")
@interface ADXiluRewardVodAd : ADXiluBaseAd
/// 是否静音播放
@property (nonatomic) BOOL isMuted;
/// 场景ID
@property (nonatomic, copy) NSString * _Nullable sceneId;
/// 代理
@property (nonatomic, weak) id <ADXiluRewardVodAdDelegate> _Nullable videoDelegate;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 展示广告
- (void)showAdFrom:(UIViewController * _Nonnull)viewController;
/// 关闭广告
- (void)closeAd;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize SWIFT_UNAVAILABLE;
@end

@class BeiZiRewardedVideo;
@interface ADXiluRewardVodAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiRewardedVideoDelegate>
- (void)BeiZi_rewardedVideo:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo didFailToLoadAdWithError:(BeiZiRequestError * _Nonnull)error;
- (void)BeiZi_rewardedVideoDidReceiveAd:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo;
- (void)BeiZi_rewardedVideoDidDismissScreen:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo;
- (void)BeiZi_rewardedVideoDidClick:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo;
- (void)BeiZi_rewardedVideoDidPlayEnd:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo;
- (void)BeiZi_rewardedVideoDidStartPlay:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo;
- (void)BeiZi_rewardedVideo:(BeiZiRewardedVideo * _Nonnull)beiziRewardedVideo didRewardUserWithReward:(NSObject * _Nonnull)reward;
@end

@class MSRewardVideoAd;
@interface ADXiluRewardVodAd (SWIFT_EXTENSION(ADXiluSDK)) <MSRewardVideoAdDelegate>
- (void)msRewardVideoLoaded:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoError:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd error:(NSError * _Null_unspecified)error;
- (void)msRewardVideoRenderFail:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd error:(NSError * _Null_unspecified)error;
- (void)msRewardVideoClickSkip:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd currentTime:(NSTimeInterval)currentTime;
- (void)msRewardVideoReward:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd extInfo:(NSDictionary * _Null_unspecified)adInfo;
- (void)msRewardVideoResumePlaying:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoRenderSuccess:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoStartPlaying:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoStopPlaying:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoWillShow:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoClicked:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoClosed:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoFinish:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoCached:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoShow:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd;
- (void)msRewardVideoPlayingError:(MSRewardVideoAd * _Null_unspecified)msRewardVideoAd error:(NSError * _Null_unspecified)error;
@end

/// 激励视频广告监听器
SWIFT_PROTOCOL("_TtP9ADXiluSDK25ADXiluRewardVodAdDelegate_")
@protocol ADXiluRewardVodAdDelegate <ADXiluBaseAdDelegate>
/// 视频缓存完成
- (void)xilu_AdVideoDidCache:(ADXiluBaseAd * _Nonnull)rewardVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 视频播放完成
- (void)xilu_AdVideoDidComplete:(ADXiluBaseAd * _Nonnull)rewardVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 视频播放错误
- (void)xilu_AdVideoDidError:(ADXiluBaseAd * _Nonnull)rewardVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo error:(ADXiluError * _Nonnull)error;
/// 获得奖励
- (void)xilu_AdDidReward:(ADXiluBaseAd * _Nonnull)rewardVodAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
@end

/// 激励视频广告信息
SWIFT_CLASS("_TtC9ADXiluSDK21ADXiluRewardVodAdInfo")
@interface ADXiluRewardVodAdInfo : ADXiluAdInfo
/// 自定义数据
@property (nonatomic, readonly, copy) NSString * _Nullable customData;
/// 是否静音播放
@property (nonatomic, readonly) BOOL isMuted;
/// 是否已过期
@property (nonatomic, readonly) BOOL isExpired;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform rewardName:(NSString * _Nonnull)rewardName rewardAmount:(NSInteger)rewardAmount customData:(NSString * _Nullable)customData isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
/// 检查是否已过期
- (BOOL)checkExpired SWIFT_WARN_UNUSED_RESULT;
/// 标记为过期
- (void)markAsExpired;
- (nonnull instancetype)initWithAdId:(NSString * _Nonnull)adId platform:(enum ADXiluAdPlatform)platform isReady:(BOOL)isReady SWIFT_UNAVAILABLE;
@end

/// ADXilu SDK 核心类
SWIFT_CLASS("_TtC9ADXiluSDK9ADXiluSDK")
@interface ADXiluSDK : NSObject
/// 单例实例
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ADXiluSDK * _Nonnull shared;)
+ (ADXiluSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 是否已初始化
@property (nonatomic, readonly) BOOL isInitialized;
/// 应用ID
@property (nonatomic, readonly, copy) NSString * _Nullable appId;
/// 调试模式
@property (nonatomic, readonly) BOOL isDebugMode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// 初始化SDK
/// \param appId 应用ID
///
/// \param debug 是否开启调试模式
///
/// \param completion 初始化完成回调
///
- (void)initializeWithAppId:(NSString * _Nonnull)appId debug:(BOOL)debug completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
/// 获取SDK版本
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
@end

enum ADXiluSplashAdStyle : NSInteger;
/// 开屏广告类
SWIFT_CLASS("_TtC9ADXiluSDK14ADXiluSplashAd")
@interface ADXiluSplashAd : ADXiluBaseAd
/// 广告样式
@property (nonatomic, readonly) enum ADXiluSplashAdStyle style;
@property (nonatomic, strong) UIView * _Nullable bottomView;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId style:(enum ADXiluSplashAdStyle)style adSize:(ADXiluAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
/// 加载广告
- (void)loadAd;
/// 展示广告
- (void)showAdIn:(id _Nullable)containerView;
/// 关闭广告
- (void)closeAd;
/// 释放资源
- (void)p_release;
- (nonnull instancetype)initWithAdPosId:(NSString * _Nonnull)adPosId adSize:(ADXiluAdSize * _Nonnull)adSize SWIFT_UNAVAILABLE;
@end

@class BeiZiSplash;
@interface ADXiluSplashAd (SWIFT_EXTENSION(ADXiluSDK)) <BeiZiSplashDelegate>
- (UIView * _Nonnull)BeiZi_splashBottomView SWIFT_WARN_UNUSED_RESULT;
- (void)BeiZi_splashDidClick:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashAdLifeTime:(int32_t)lifeTime;
- (void)BeiZi_splashDidLoadSuccess:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashDidPresentScreen:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashDidDismissScreen:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashWillDismissScreen:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashZoomOutDidClick:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splashZoomOutDidClose:(BeiZiSplash * _Nonnull)beiziSplash;
- (void)BeiZi_splash:(BeiZiSplash * _Nonnull)beiziSplash didFailToLoadAdWithError:(BeiZiRequestError * _Nonnull)error;
@end

@class MSSplashAd;
@interface ADXiluSplashAd (SWIFT_EXTENSION(ADXiluSDK)) <MSSplashAdDelegate>
- (void)msSplashPresent:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashSkip:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashClosed:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashClicked:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashShow:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashDetailClosed:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashAdReadySuccess:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashError:(MSSplashAd * _Null_unspecified)splashAd withError:(NSError * _Null_unspecified)error;
- (void)msSplashAdShowFail:(MSSplashAd * _Null_unspecified)splashAd error:(NSError * _Null_unspecified)error;
- (void)msSplashAdLifeTime:(NSInteger)time splashAd:(MSSplashAd * _Null_unspecified)splashAd;
- (void)msSplashWillClosed:(MSSplashAd * _Null_unspecified)splashAd;
@end

/// 开屏广告监听器
SWIFT_PROTOCOL("_TtP9ADXiluSDK22ADXiluSplashAdDelegate_")
@protocol ADXiluSplashAdDelegate <ADXiluBaseAdDelegate>
@optional
/// 广告接收成功
- (void)splashAdDidReceive:(ADXiluSplashAd * _Nonnull)splashAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告曝光
- (void)splashAdDidExpose:(ADXiluSplashAd * _Nonnull)splashAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告点击
- (void)splashAdDidClick:(ADXiluSplashAd * _Nonnull)splashAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告关闭
- (void)splashAdDidClose:(ADXiluSplashAd * _Nonnull)splashAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告跳过
- (void)splashAdDidSkip:(ADXiluSplashAd * _Nonnull)splashAd adInfo:(ADXiluAdInfo * _Nonnull)adInfo;
/// 广告加载失败
- (void)splashAdDidFail:(ADXiluSplashAd * _Nonnull)splashAd error:(ADXiluError * _Nonnull)error;
/// 倒计时回调
- (void)splashAdTick:(ADXiluSplashAd * _Nonnull)splashAd remainingTime:(NSTimeInterval)remainingTime;
@end

/// 开屏广告样式
typedef SWIFT_ENUM(NSInteger, ADXiluSplashAdStyle, open) {
  ADXiluSplashAdStyleFullScreen = 0,
  ADXiluSplashAdStyleHalfScreen = 1,
  ADXiluSplashAdStyleImmersive = 2,
};

@interface MSInterstitialAd (SWIFT_EXTENSION(ADXiluSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@interface MSNativeFeedAd (SWIFT_EXTENSION(ADXiluSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@interface MSRewardVideoAd (SWIFT_EXTENSION(ADXiluSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@interface MSSplashAd (SWIFT_EXTENSION(ADXiluSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@interface NSDictionary<KeyType, ObjectType> (SWIFT_EXTENSION(ADXiluSDK))
- (NSString * _Nonnull)jsonString SWIFT_WARN_UNUSED_RESULT;
@end

SWIFT_CLASS("_TtC9ADXiluSDK16PHCommonKeyChain")
@interface PHCommonKeyChain : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC9ADXiluSDK16XLNetworkMonitor")
@interface XLNetworkMonitor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
